---
interface Props {
	title: string;
}

const { title } = Astro.props;
import GoogleAnalytics from '../components/GoogleAnalytics.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<GoogleAnalytics />
		<meta charset="UTF-8" />
		<meta name="description" content="Professional braiding and hairstylist services specializing in black braids and styles for black hair. At braids villa, we give you a luxurious experience that leaves you feeling gorgeous and confident!" />
		<meta name="keywords" content="braiding, hairstylist, black braids, black hair, braiding services, hair braiding, black hairstylist, black hairstylist guelph, black hairstylist hamilton, black braids guelph, black braids hamilton," />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="google-site-verification" content="YwjqRYnLkLp7iVCf0tt_PCO5e9P5fbHvsXTfvqev0P4" />
		<link rel="icon" type="image/x-icon" href="/icon/favicon.ico" />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Chivo:wght@100..900&display=swap" rel="stylesheet">
		<!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@3.0.1/dist/cookieconsent.css"> -->
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
		  <!-- Proxy GTM script -->
		<slot />
		<!-- <script type="module"  src="/cookieconsent-config.js"></script> -->

		<!-- <button type="button" data-cc="show-consentModal" class="cookie-consent-button">
			<svg fill="#f72a51" width="64px" height="64px" viewBox="0 0 256.00 256.00" id="Flat" xmlns="http://www.w3.org/2000/svg" stroke="#FF6F91" transform="matrix(1, 0, 0, 1, 0, 0)" stroke-width="0.00256"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" stroke="#CCCCCC" stroke-width="0.512"></g><g id="SVGRepo_iconCarrier"> <path d="M228.43066,111.76758a19.89757,19.89757,0,0,0-16.82714-3.85645,19.99513,19.99513,0,0,1-24.40186-19.28125,19.92083,19.92083,0,0,0-19.82959-19.83105,19.99406,19.99406,0,0,1-19.28223-24.40235,20.01326,20.01326,0,0,0-19.44091-24.39062c-.22559-.001-.44678-.00195-.67188-.00195a107.99982,107.99982,0,1,0,108.01758,107.334v-.001A19.95917,19.95917,0,0,0,228.43066,111.76758Zm-41.0874,75.68262c-32.29883,32.24121-85.18115,32.59375-117.88525.79A83.99965,83.99965,0,0,1,123.84668,44.10352a44.00257,44.00257,0,0,0,39.55078,48.499A44.00432,44.00432,0,0,0,211.897,132.15332,83.31727,83.31727,0,0,1,187.34326,187.4502Zm-20.02954-26.76368a15.99985,15.99985,0,1,1-22.62744,0A15.99941,15.99941,0,0,1,167.31372,160.68652Zm-64-8a15.99985,15.99985,0,1,1-22.62744,0A15.99941,15.99941,0,0,1,103.31372,152.68652Zm-30.62744-33.373a15.99985,15.99985,0,1,1,22.62744,0A15.99963,15.99963,0,0,1,72.68628,119.31348Zm74.62744,16a15.99985,15.99985,0,1,1,0-22.627A15.99977,15.99977,0,0,1,147.31372,135.31348Z"></path> </g></svg>
		</button>
		<script>
			import { reset, run } from 'vanilla-cookieconsent';
			import { config } from '../components/CookieConsentConfig';
		  
			  const resetBtn = document.getElementById("reset-btn");
			  const toggleThemeBtb = document.getElementById("toggle-theme-btn");
		  
			  resetBtn?.addEventListener('click', () => {
				  reset(true);
				  run(config);
			  });
		  
			  toggleThemeBtb?.addEventListener('click', () => {
				  document.body.classList.toggle('cc--elegant-black');
			  });
		  </script> -->
	</body>
</html>

<style is:global>
	:root {

		/*Light Theme*/
		--background-color : #FFC2D1;
		--main-text-color : #000000;
		--secondary-text-color: #000000;
		--primary-btn-color : #FF6F91;
		--secondary-btn-color: #000000;
		--card-highlight-color : #FFB3C6;
		--modal-background-color : #ffffff;
		--hover-color : #f72a5a;
		--light-hover-color : #FFB3C6;
		--background-blur-color : #fde3e382;
		--cookie-background-color: #FFC2D1;
		--cookie-hover-color :#ffa2b9 ;
		--transition-duration: 0.5s; 


		/* Embla css */

		--text-body: rgb(54, 49, 61);
		--text-high-contrast: rgb(49, 49, 49);
		--text-medium-contrast: rgb(99, 94, 105);
		--detail-high-contrast: rgb(192, 192, 192);
		--detail-medium-contrast: rgb(234, 234, 234);
		--detail-low-contrast: rgb(240, 240, 242);
		--text-high-contrast-rgb-value: 49, 49, 49;

	}
	:root.dark {
		/*Dark Theme*/
		--background-color : #0a0a0a;
		--main-text-color : #FAF3E0;
		--secondary-text-color: #E5E1C9;
		--secondary-btn-color: #FF6F91;
		--card-highlight-color : #1E1E1E;
		--modal-background-color : #2f2f2f;
		--hover-color : #FAF3E0;
		--background-blur-color : #89888812;
		--cookie-background-color: #1E1E1E;
		--cookie-hover-color : #383838;



		/* Toast container darkmode */
		--toastify-color-light: #717171;
 	 	--toastify-text-color-light:#FAF3E0;
	}

	@media screen and (max-width : 600px) {
		:root{
			--background-blur-color : #fde3e3;
		}
		:root.dark{
			--background-blur-color : #8988885a;
		}
	}

	.section {
    opacity: 0; /* Start hidden */
    transition: opacity 0.6s ease-in; /* Transition effect */
	}

	.section.visible {
		opacity: 1; /* Fully visible */
	}
	
	h1, ul, hr {
		color: var(--main-text-color);
	}
	p, h2{
		color: var(--secondary-text-color);
	}

	/* for smooth transition*/
	html{
		transition: background-color var(--transition-duration);
    	scroll-behavior: smooth;
	}
	html {
		font-family: "Chivo", system-ui, sans-serif;
		background: var(--background-color);
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
		button,
		input[type="button"],
		input[type="submit"],
		input[type="reset"] {
			-webkit-appearance: none; /* Remove default WebKit styles */
			-moz-appearance: none;    /* Remove default Mozilla styles */
			appearance: none;         /* Remove default styles for other browsers */
			background: none;         /* Remove default background */
			border: none;             /* Remove default border */
			color: inherit;           /* Inherit text color from parent element */
			font: inherit;            /* Inherit font from parent element */
			padding: 0;               /* Remove default padding */
			margin: 0;                /* Remove default margin */
			cursor: pointer;          /* Set cursor to pointer */
		}
		

</style>
<style>
    .cookie-consent-button {
        position: fixed;
        bottom: 1rem;
        left: 1rem;
        display: flex;
        align-items: center;
        background-color: var(--cookie-background-color);
        /* background-color: var(--card-highlight-color); */
        border: 1px solid;
        padding: 0.5rem 0.5rem;
        border-radius: 5px;
        cursor: pointer;
        z-index: 1000;
		transition: background-color ease 0.5s;
    }

    .cookie-consent-button svg {
        width: 2rem;
        height: 2rem;
		fill: var(--main-text-color);
    }
	
    .cookie-consent-button:hover {
        background-color: var(--cookie-hover-color);
    }
</style>
<script>
	document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll('.section');

    const options = {
        root: null, // Use the viewport as the root
        rootMargin: '0px',
        threshold: 0.07 // Trigger when 10% of the section is visible
    };

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible'); // Add visible class
                observer.unobserve(entry.target); // Stop observing once visible
            }
        });
    }, options);

    sections.forEach(section => {
        observer.observe(section); // Observe each section
    });
});
</script>